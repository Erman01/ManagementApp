@model WorkManagement.Core.ViewModels.WorkerViewModel
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "WorkerManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Worker</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      
        @Html.HiddenFor(model => model.Worker.WorkerId)

        <div class="form-group">
            @Html.LabelFor(model => model.Worker.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Worker.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Worker.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Worker.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Worker.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Worker.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Worker.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Worker.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Worker.Salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Worker.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Worker.DateOfBirth,"{0:yyyy.MM.dd}", new { htmlAttributes = new { @class = "form-control" ,type="date"} })
                @Html.ValidationMessageFor(model => model.Worker.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Worker.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(model => model.Worker.Gender, true) Male
                    </label>
                    <label>
                        @Html.RadioButtonFor(model => model.Worker.Gender, false) Female
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Worker.WorkerImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              <input type="file" name="file" id="file" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Worker.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model=>model.Worker.DepartmentId,new SelectList(Model.Departments,"DepartmentId","DepartmentName"), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
